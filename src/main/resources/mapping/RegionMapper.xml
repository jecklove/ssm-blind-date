<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapping.RegionMapper">
  <resultMap id="BaseResultMap" type="Region">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="root_id" jdbcType="BIGINT" property="rootId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="full_name" jdbcType="VARCHAR" property="fullName" />
    <result column="level" jdbcType="TINYINT" property="level" />
  </resultMap>
  <sql id="Base_Column_List">
    id, parent_id, root_id, name, full_name, level
  </sql>

  <sql id="sf-region">
    <where>
      <if test="id != null">and id = #{id}</if>
      <if test="parentId != null"> and parent_id = #{parentId}</if>
      <if test="rootId != null"> and root_id = #{rootId}</if>
      <if test="name != null"> and name = #{name}</if>
      <if test="fullName != null"> and full_name = #{fullName}</if>
      <if test="level != null">and level = #{level}</if>
    </where>
  </sql>
  <select id="getOne" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    full_name
    from region
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getList" parameterType="Region" resultMap="BaseResultMap">
    select * from region
    <include refid="sf-region"/>

  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from region
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="Region">
    insert into region (id, parent_id, root_id, 
      name, full_name, level
      )
    values (#{id,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{rootId,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{fullName,jdbcType=VARCHAR}, #{level,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.jecklove.entity.Region">
    insert into region
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="rootId != null">
        root_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="fullName != null">
        full_name,
      </if>
      <if test="level != null">
        level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="rootId != null">
        #{rootId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null">
        #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.jecklove.entity.Region">
    update region
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="rootId != null">
        root_id = #{rootId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null">
        full_name = #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.jecklove.entity.Region">
    update region
    set parent_id = #{parentId,jdbcType=BIGINT},
      root_id = #{rootId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      full_name = #{fullName,jdbcType=VARCHAR},
      level = #{level,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>